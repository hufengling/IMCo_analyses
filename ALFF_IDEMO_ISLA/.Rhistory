# transform aal to lower resolution
aal_sym <- floor(aal/10) * 10
all_indices <- unique(aal_sym)
subcortical_indices <- c(4100, 4200, 7000, 7010, 7020, 7100) #select subcortical regions
excluded_indices <- all_indices[!all_indices %in% subcortical_indices]
for(i in 1:length(excluded_indices)) {
aal_sym[aal_sym == excluded_indices[i]] <- 0
}
# get file paths
coupled_file_paths <- pval_metadata %>%
filter(matrix_type != "modality",
coefficient == "sex" | coefficient == "age",
mc_correction == "fdr05") %>%
pull(file_paths)
file_labels <- c("global_age", "global_sex", "unscaled_age", "unscaled_sex")
#Coupled data on Yeo7
coupled_yeo7 <- get_prop_sig(coupled_file_paths, file_labels, yeo7, settings$mask_path)
coupled_yeo7_barplot <- ggplot(coupled_yeo7, aes(network_ids, proportion)) +
geom_col() +
geom_errorbar(aes(ymin = proportion - se, ymax = proportion + se), width = .2,
position = position_dodge(.9)) +
facet_wrap(~ map_name) +
labs(title = "Coupled on Yeo7") +
scale_x_discrete(labels = c("Visual", "Somatomotor", "Dorsal Attention", "Ventral Attention", "Limbic", "Frontoparietal", "Default")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90)); coupled_yeo7_barplot
ggsave(plot = coupled_yeo7_barplot, file.path(settings$output_dir, "figures/barplots", "yeo7_pval-prop_fdr05.png"), type = "cairo-png")
#Coupled data on AAL
coupled_aal <- get_prop_sig(coupled_file_paths, file_labels, aal_sym, settings$mask_path)
coupled_aal_barplot <- ggplot(coupled_aal, aes(network_ids, proportion)) +
geom_col() +
geom_errorbar(aes(ymin = proportion - se, ymax = proportion + se), width = .2,
position = position_dodge(.9)) +
facet_wrap(~ map_name) +
labs(title = "Coupled on AAL") +
scale_x_discrete(labels = c("Hippocampus", "Amygdala", "Caudate", "Putamen", "Pallidum", "Thalamus")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90)); coupled_aal_barplot
ggsave(plot = coupled_aal_barplot, file.path(settings$output_dir, "figures/barplots", "aal_pval-prop_fdr05.png"), type = "cairo-png")
###############################
# Adjusted Modality maps
modality_file_paths <- pval_metadata %>%
filter(matrix_type == "modality",
coefficient == "sex" | coefficient == "age",
mc_correction == "fdr05") %>%
pull(file_paths)
file_labels <- c(paste0(settings$modalities[1], "_age"),
paste0(settings$modalities[1], "_sex"),
paste0(settings$modalities[2], "_age"),
paste0(settings$modalities[2], "_sex"),
paste0(settings$modalities[3], "_age"),
paste0(settings$modalities[3], "_sex"))
# Modality data on Yeo7
modality_yeo7 <- get_prop_sig(file_paths = modality_file_paths,
file_labels = file_labels,
atlas = yeo7,
mask = settings$mask_path) #TODO
modality_yeo7_barplot <- ggplot(modality_yeo7, aes(network_ids, proportion)) +
geom_col() +
geom_errorbar(aes(ymin = proportion - se, ymax = proportion + se), width = .2,
position = position_dodge(.9)) +
facet_wrap(~ map_name) +
labs(title = "Modality on Yeo7") +
scale_x_discrete(labels = c("Visual", "Somatomotor", "Dorsal Attention", "Ventral Attention", "Limbic", "Frontoparietal", "Default")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90)); modality_yeo7_barplot
ggsave(plot = modality_yeo7_barplot, file.path(settings$output_dir, "figures/barplots", "yeo7_modality_fdr05.png"), type = "cairo-png")
# Modality data on AAL
modality_aal <- get_prop_sig(modality_file_paths, file_labels, aal_sym, settings$mask_path)
modality_aal_barplot <- ggplot(modality_aal, aes(network_ids, proportion)) +
geom_col() +
geom_errorbar(aes(ymin = proportion - se, ymax = proportion + se), width = .2,
position = position_dodge(.9)) +
facet_wrap(~ map_name) +
labs(title = "Modality on AAL") +
scale_x_discrete(labels = c("Hippocampus", "Amygdala", "Caudate", "Putamen", "Pallidum", "Thalamus")) +
theme_classic() +
theme(axis.text.x = element_text(angle = 90)); modality_aal_barplot
ggsave(plot = modality_aal_barplot, file.path(settings$output_dir, "figures/barplots", "aal_modality_fdr05.png"), type = "cairo-png")
rm(aal, aal_sym, yeo7, coupled_aal, coupled_aal_barplot, coupled_yeo7, coupled_yeo7_barplot, modality_aal, modality_aal_barplot, modality_yeo7, modality_yeo7_barplot, pval_metadata, all_indices, coupled_file_paths, excluded_indices, file_labels, i, modality_file_paths, subcortical_indices, get_prop_sig)
source(here("R/mri_vol2surf.R"))
split_atlas_into_regions <- function(atlas, atlas_name = c("yeo7", "aal"), region_out_dir) {
dir.create(region_out_dir, showWarnings = FALSE)
atlas[atlas == 0] <- NA
region_names <- atlas %>%
as.factor() %>%
summary() %>%
names()
region_names <- region_names[-length(region_names)]
out_file_names <- region_names %>%
paste0(atlas_name, "_", ., ".nii.gz") %>%
file.path(region_out_dir, .)
mapply(
function(region_name, out_file_name) {
temp <- atlas * 1 # causes R to make a copy of atlas at a new address
temp[atlas == region_name] <- 1
temp[atlas != region_name] <- 0
antsImageWrite(temp, out_file_name)
}, as.numeric(region_names),
out_file_names)
return(out_file_names)
}
get_names <- function(paths) {
names_list <- lapply(paths, function(path) {
split_path <- str_split(path, "/") %>%
unlist()
file_name <- split_path[length(split_path)]
})
unlist(names_list)
}
transform_to_MNI <- function(images, paths, MNI_transform_out_dir) {
MNI <- check_ants(file.path(settings$input_dir, "references/atlases/MNI152_T1_1mm_brain.nii.gz"))
transform_list <- c(file.path(settings$input_dir, "references/transformations/PNC-MNI_0Warp.nii.gz"),
file.path(settings$input_dir, "references/transformations/PNC-MNI_1Affine.mat"))
file_names <- get_names(paths)
mapply(function(image, file_name, MNI, transform_list) {
image_transformed <- antsApplyTransforms(fixed = MNI,
moving = image,
transformlist = transform_list,
interpolator = "nearestNeighbor",
imagetype = 0)
antsImageWrite(image_transformed, file.path(MNI_transform_out_dir, file_name))
return(file.path(MNI_transform_out_dir, file_name))
}, image = images, file_name = file_names,
MoreArgs = list(MNI = MNI, transform_list = transform_list))
}
project_to_surface <- function(image_MNI_paths, out_dir) {
dir.create(out_dir, showWarnings = FALSE)
hemi_paths <- lapply(image_MNI_paths, function(image_path) {
outfile = get_names(image_path)
lh <- mri_vol2surf(mov = image_path,
target_subject = 'fsaverage',
opts = "--interp nearest",
outfile = file.path(out_dir, outfile),
hemi = "lh")
rh <- mri_vol2surf(mov = image_path,
target_subject = 'fsaverage',
opts = "--interp nearest",
outfile = file.path(out_dir, outfile),
hemi = "rh")
c(file.path(lh), file.path(rh))
})
num_files <- length(hemi_paths)
paths_df <- hemi_paths %>%
unlist() %>%
matrix(byrow = TRUE, ncol = 1) %>%
as.data.frame() %>%
rename(paths = "V1") %>%
mutate(hemisphere = rep(c("lh", "rh"), num_files))
paths_df
}
preprocess_for_spin_test <- function(file_paths = NULL, atlas_name = c("", "yeo7", "aal"),
fs_images_dir,
file_path_output_dir = "") {
if (is.null(file_paths)) {
if (atlas_name == "yeo7") {
atlas <- check_ants(file.path(settings$input_dir, "references/atlases/7yeonetworkPNC.nii.gz"))
atlas_output_dir <- "yeo7_regions"
}
if (atlas_name == "aal") {
atlas <- check_ants(file.path(settings$input_dir, "references/atlases/AAL_atlas_PNC.nii.gz"))
atlas_output_dir <- "aal_regions"
for(i in 0:9) {
lower <- i * 1000
upper <- (i + 1) * 1000
atlas[atlas >= lower & atlas < upper] <- lower
}
}
region_paths <- split_atlas_into_regions(atlas,
atlas_name = atlas_name,
file.path(fs_images_dir, "PNC_space", atlas_output_dir))
region_images <- check_ants(region_paths)
region_transformed_paths <- transform_to_MNI(region_images,
region_paths,
file.path(fs_images_dir, "MNI_space", atlas_output_dir))
region_sphere <- project_to_surface(region_transformed_paths,
file.path(fs_images_dir, "surfaces", atlas_output_dir))
return(NULL)
}
if (!is.null(file_paths)) {
pval_images <- check_ants(file_paths)
pval_transformed_paths <- transform_to_MNI(pval_images,
file_paths,
file.path(fs_images_dir, "MNI_space", file_path_output_dir))
pval_sphere <- project_to_surface(pval_transformed_paths,
file.path(fs_images_dir, "surfaces", file_path_output_dir))
return(NULL)
}
}
Sys.setenv(FS_LICENSE="/home/fengling/software/freesurfer/license.txt")
pval_descriptive <- read_csv(file.path(settings$output_dir, "csvs/pval_descriptive_stats.csv"))
pval_coupling_paths <- pval_descriptive %>%
filter(mc_correction == "fdr05",
matrix_type != "modality") %>%
pull(file_paths) %>%
as.list()
pval_modality_paths <- pval_descriptive %>%
filter(mc_correction == "fdr05",
matrix_type == "modality") %>%
pull(file_paths) %>%
as.list()
fs_images_dir <- file.path(settings$output_dir, "freesurfer_images")
#atlas
preprocess_for_spin_test(atlas_name = "yeo7", #TODO should I apply grey matter mask?
fs_images_dir = fs_images_dir)
preprocess_for_spin_test(atlas_name = "aal",
fs_images_dir = fs_images_dir)
#pvals
preprocess_for_spin_test(file_paths = pval_coupling_paths,
fs_images_dir = fs_images_dir,
file_path_output_dir = "pvals/adjusted")
preprocess_for_spin_test(file_paths = pval_modality_paths,
fs_images_dir = fs_images_dir,
file_path_output_dir = "pvals/modality")
#descriptive
preprocess_for_spin_test(file_paths = list.files(file.path(settings$output_dir, "niftis/descriptive"),
full.names = TRUE) %>% as.list(),
fs_images_dir = fs_images_dir,
file_path_output_dir = "descriptive")
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
library(freesurfer)
#TOCHANGE
idemo_qa <- read_csv(here("input/csvs/idemodata/n1601_idemo_FinalQA_092817.csv"))
idemo <- read_csv(here("input/csvs/idemodata/n1601_idemoBehavior_20151130.csv"))
idemo_health <- read_csv(here("input/csvs/idemodata/n1601_health_20170421.csv"))
pnc_demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv"))
isla_subj <- read_table(here("input/csvs/demographics/isla_subj.txt"), col_names = FALSE)
idemo_qa <- idemo_qa %>% filter(idemoExcludeVoxelwise == 0)
idemo <- idemo %>% filter(idemoBehHappyCorrectCount >= 8)
idemo_health <- idemo_health %>% filter(ltnExcludev2 == 0)
pnc_demographics <- pnc_demographics %>% rename(scanid = "id")
isla_subj <- isla_subj %>% separate(X1, c("scanid", "file_root"), sep = "_")
common_pts <- Reduce(intersect, list(idemo_qa$scanid, idemo$scanid, idemo_health$scanid, pnc_demographics$scanid, isla_subj$scanid)) %>%
as.data.frame() %>%
rename(subj_num = ".")
input_filepaths <- common_pts %>%
mutate(modality_1 = paste0(subj_num, "_alffStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/alff", .),
modality_2 = paste0(subj_num, "_predictedGMD1.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/cbf-isla", .),
modality_3 = paste0(subj_num, "_sigchange_cope1_TaskStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/idemo", .))
input_filepaths$subj_num <- as.numeric(input_filepaths$subj_num)
write_csv(input_filepaths, here("input/csvs/input_filepaths.csv"))
rm(pnc_demographics, common_pts, idemo, idemo_health, isla_subj)
#TOCHANGE
idemo_qa <- idemo_qa %>% rename(subj_num = scanid)
demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv")) %>%
rename(subj_num = id)
demographics <- right_join(demographics, input_filepaths,
by = "subj_num") %>%
left_join(idemo_qa, by = "subj_num") %>% mutate(across(contains("Exclude"), as.factor),
sex = case_when(
sex == 1 ~ "Male",
sex == 2 ~ "Female",
T ~ NA_character_),
race2 = case_when(
race2 == 1 ~ "White",
race2 == 2 ~ "Black",
race2 == 3 ~ "Other",
T ~ NA_character_),
across(c(sex, race, race2, ethnicity, handednessv2), as.factor))
predictors <- demographics %>%
select(sex, ageAtScan1, race2, pcaslRelMeanRMSMotion, restRelMeanRMSMotion, idemoRelMeanRMSMotion)
write_csv(predictors, file.path(here("input/csvs/predictors.csv")))
rm(demographics, idemo_qa)
#TOCHANGE
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
nifti_dir <- "~/Documents/IMCo_analyses/input/niftis"
batch_script_dir <- here("R/batch_scripts")
input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv")
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
predictors_path <- file.path(input_dir, "csvs/predictors.csv")
settings_path <- file.path(input_dir, "csvs/settings.RData")
modalities <- c("alff", "cbf-isla", "idemo") #TOCHANGE
fwhm <- 3
prop_miss <- 0.9
settings <- list(output_dir = output_dir,
input_dir = input_dir,
nifti_dir = nifti_dir,
batch_script_dir = batch_script_dir,
input_filepaths_path = input_filepaths_path,
mask_path = mask_path,
predictors_path = predictors_path,
settings_path = settings_path,
modalities = modalities,
fwhm = fwhm,
prop_miss = prop_miss)
input_filepaths <- read_csv(file.path(settings$input_dir, "csvs/input_filepaths.csv"))
save(settings, file = file.path(settings$input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, nifti_dir, batch_script_dir, input_filepaths_path, mask_path, predictors_path, settings_path, modalities, fwhm, prop_miss)
list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"))
list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE)
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
check_ants()
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(20, .) %>%
check_ants()
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(20, .)
?sample
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(20)
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(30)
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(30) %>%
check_ants()
test <- as.array(global_wcov)
gw_arr <- vector(list, length = 30)
for (i in 1:30) {
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
}
global_wcov[[1]]
current <- global_wcov[[i]] %>% as.array() #%>% as.vector()
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
gw_vec <- vector(list, length = 30)
for (i in 1:30) {
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
}
gw_vec <- vector(type = "list", length = 30)
?vector
gw_vec <- vector("list", length = 30)
for (i in 1:30) {
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
}
rm(test)
gw_vals <- gw_vec %>% unlist()
gw_vals <- gw_vec %>% unlist() %>% sample(100000)
histogram(gw_vals)
hist(gw_vals)
gw_vals <- gw_vec %>% unlist()
gw_vals_samp <- sample(100000)
hist(gw_vals)
gw_vals[gw_vals < 0.5]
unscaled_wcor <- list.files(file.path(settings$output_dir, "niftis/coupled/unscaled_wcor"), full.names = TRUE) %>%
sample(30) %>%
check_ants()
uw_vec <- vector("list", length = 30)
for (i in 1:30) {
current <- unscaled_wcor[[i]] %>% as.array() %>% as.vector()
uw_vec[[i]] <- current[current != 0]
}
uw_vals <- uw_vec %>% unlist()
uw_vals_samp <- sample(100000)
hist(uw_vals)
min(gw_vals)
min(uw_vals)
var(gw_vals)
var(uw_vals)
hist(log(gw_vals))
hist(gw_vals)
hist(gw_vals %>% log)
hist(gw_vals)
hist(gw_vals %>% exp())
hist(gw_vals)
hist(gw_vals %>% exp())
var(gw_vals)
var(log(gw_vals))
var(exp(gw_vals))
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(50) %>%
check_ants()
gw_vec <- vector("list", length = 50)
for (i in 1:50) {
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
}
gw_vals <- gw_vec %>% unlist()
hist(gw_vals %>% exp())
unscaled_wcor <- list.files(file.path(settings$output_dir, "niftis/coupled/unscaled_wcor"), full.names = TRUE) %>%
sample(50) %>%
check_ants()
uw_vec <- vector("list", length = 50)
for (i in 1:50) {
current <- unscaled_wcor[[i]] %>% as.array() %>% as.vector()
uw_vec[[i]] <- current[current != 0]
}
uw_vals <- uw_vec %>% unlist()
hist(uw_vals)
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
library(freesurfer)
#TOCHANGE
idemo_qa <- read_csv(here("input/csvs/idemodata/n1601_idemo_FinalQA_092817.csv"))
idemo <- read_csv(here("input/csvs/idemodata/n1601_idemoBehavior_20151130.csv"))
idemo_health <- read_csv(here("input/csvs/idemodata/n1601_health_20170421.csv"))
pnc_demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv"))
isla_subj <- read_table(here("input/csvs/demographics/isla_subj.txt"), col_names = FALSE)
idemo_qa <- idemo_qa %>% filter(idemoExcludeVoxelwise == 0)
idemo <- idemo %>% filter(idemoBehHappyCorrectCount >= 8)
idemo_health <- idemo_health %>% filter(ltnExcludev2 == 0)
pnc_demographics <- pnc_demographics %>% rename(scanid = "id")
isla_subj <- isla_subj %>% separate(X1, c("scanid", "file_root"), sep = "_")
common_pts <- Reduce(intersect, list(idemo_qa$scanid, idemo$scanid, idemo_health$scanid, pnc_demographics$scanid, isla_subj$scanid)) %>%
as.data.frame() %>%
rename(subj_num = ".")
input_filepaths <- common_pts %>%
mutate(modality_1 = paste0(subj_num, "_alffStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/alff", .),
modality_2 = paste0(subj_num, "_predictedGMD1.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/cbf-isla", .),
modality_3 = paste0(subj_num, "_sigchange_cope1_TaskStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/idemo", .))
input_filepaths$subj_num <- as.numeric(input_filepaths$subj_num)
write_csv(input_filepaths, here("input/csvs/input_filepaths.csv"))
rm(pnc_demographics, common_pts, idemo, idemo_health, isla_subj)
#TOCHANGE
idemo_qa <- idemo_qa %>% rename(subj_num = scanid)
demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv")) %>%
rename(subj_num = id)
demographics <- right_join(demographics, input_filepaths,
by = "subj_num") %>%
left_join(idemo_qa, by = "subj_num") %>% mutate(across(contains("Exclude"), as.factor),
sex = case_when(
sex == 1 ~ "Male",
sex == 2 ~ "Female",
T ~ NA_character_),
race2 = case_when(
race2 == 1 ~ "White",
race2 == 2 ~ "Black",
race2 == 3 ~ "Other",
T ~ NA_character_),
across(c(sex, race, race2, ethnicity, handednessv2), as.factor))
predictors <- demographics %>%
select(sex, ageAtScan1, race2, pcaslRelMeanRMSMotion, restRelMeanRMSMotion, idemoRelMeanRMSMotion)
write_csv(predictors, file.path(here("input/csvs/predictors.csv")))
rm(demographics, idemo_qa)
#TOCHANGE
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
nifti_dir <- "~/Documents/IMCo_analyses/input/niftis"
batch_script_dir <- here("R/batch_scripts")
input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv")
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
predictors_path <- file.path(input_dir, "csvs/predictors.csv")
settings_path <- file.path(input_dir, "csvs/settings.RData")
modalities <- c("alff", "cbf-isla", "idemo") #TOCHANGE
fwhm <- 3
prop_miss <- 0.9
settings <- list(output_dir = output_dir,
input_dir = input_dir,
nifti_dir = nifti_dir,
batch_script_dir = batch_script_dir,
input_filepaths_path = input_filepaths_path,
mask_path = mask_path,
predictors_path = predictors_path,
settings_path = settings_path,
modalities = modalities,
fwhm = fwhm,
prop_miss = prop_miss)
input_filepaths <- read_csv(file.path(settings$input_dir, "csvs/input_filepaths.csv"))
save(settings, file = file.path(settings$input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, nifti_dir, batch_script_dir, input_filepaths_path, mask_path, predictors_path, settings_path, modalities, fwhm, prop_miss)
global_wcov <- list.files(file.path(settings$output_dir, "niftis/coupled/global_wcov"), full.names = TRUE) %>%
sample(50) %>%
check_ants()
gw_vec <- vector("list", length = 50)
for (i in 1:50) {
current <- global_wcov[[i]] %>% as.array() %>% as.vector()
gw_vec[[i]] <- current[current != 0]
}
gw_vals <- gw_vec %>% unlist()
hist(gw_vals %>% exp())
unscaled_wcor <- list.files(file.path(settings$output_dir, "niftis/coupled/unscaled_wcor"), full.names = TRUE) %>%
sample(50) %>%
check_ants()
uw_vec <- vector("list", length = 50)
for (i in 1:50) {
current <- unscaled_wcor[[i]] %>% as.array() %>% as.vector()
uw_vec[[i]] <- current[current != 0]
}
uw_vals <- uw_vec %>% unlist()
hist(uw_vals)
hist(uw_vals)
uw_vals_tx <- uw_vals * 3
hist(uw_vals_tx)
uw_vals_tx <- uw_vals * 3 - 1
hist(uw_vals_tx)
min(uw_vals)
min(uw_vals_tx)
hist(uw_vals_tx %>% log)
hist(uw_vals_tx)
hist(uw_vals_tx %>% log)
uw_vals_tx <- uw_vals * 3 - .99
min(uw_vals_tx)
hist(uw_vals_tx)
hist(uw_vals_tx %>% log)
uw_vals_tx <- uw_vals * 3 - .90
min(uw_vals_tx)
hist(uw_vals_tx)
hist(uw_vals_tx %>% log)
uw_vals_tx <- uw_vals * 3 - .8
min(uw_vals_tx)
hist(uw_vals_tx)
hist(uw_vals_tx %>% log)
uw_vals_tx <- uw_vals * 3
uw_vals_tx <- uw_vals * 3
uw_vals <- uw_vec %>% unlist()
uw_vals_tx <- uw_vals * 3
min(uw_vals_tx)
hist(uw_vals_tx)
hist(uw_vals_tx %>% log)
hist(uw_vals_tx %>% log)
