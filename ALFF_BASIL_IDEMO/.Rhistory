load(here("input/csvs/settings.RData"))
input_filepaths <- read_csv(settings$input_filepaths_path)
predictors <- read_csv(settings$predictors_path)
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
library(freesurfer)
load(here("input/csvs/settings.RData"))
input_filepaths <- read_csv(settings$input_filepaths_path)
predictors <- read_csv(settings$predictors_path)
head(input_filepaths)
check_ants(input_filepaths$modality_1[1])
check_ants(input_filepaths$modality_2[1])
check_ants(input_filepaths$modality_1[1]) -> alff
check_ants(input_filepaths$modality_2[1]) -> basil
length(which(alff == 0))
length(which(basil == 0))
check_ants(input_filepaths$modality_2[1]) -> idemo
check_ants(input_filepaths$modality_3[1]) -> idemo
length(which(idemo == 0))
View(predictors)
View(input_filepaths)
check_ants("~/Documents/IMCo_analyses/input/niftis/cbf-isla/2647_predictedGMD1.nii.gz") -> isla
length(which(isla == 0))
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
library(freesurfer)
load(here("input/csvs/settings.RData"))
input_filepaths <- read_csv(settings$input_filepaths_path)
predictors <- read_csv(settings$predictors_path)
fs_images_dir <- list("~/Documents/IMCo_analyses/BASIL_IDEMO/output/niftis/descriptive",
"~/Documents/IMCo_analyses/IDEMO_BASIL/output/niftis/descriptive",
"~/Documents/IMCo_analyses/BASIL_IDEMO/output/freesurfer_images/MNI_space/descriptive",
"~/Documents/IMCo_analyses/IDEMO_BASIL/output/freesurfer_images/MNI_space/descriptive")
for(dir in fs_images_dir){
print(dir)
for(file in list.files(dir)) {
image <- check_ants(file.path(dir, file))
n <- length(which(image == 0))
sum <- sum(image)
print(paste(file, ":", n, sum))
}
print("")
}
fs_images_dir <- list("~/Documents/IMCo_analyses/ALFF_BASIL_IDEMO/output/niftis/descriptive",
"~/Documents/IMCo_analyses/ALFF_IDEMO_ISLA/output/niftis/descriptive",
"~/Documents/IMCo_analyses/ALFF_BASIL_IDEMO/output/freesurfer_images/MNI_space/descriptive",
"~/Documents/IMCo_analyses/ALFF_IDEMO_ISLA/output/freesurfer_images/MNI_space/descriptive")
for(dir in fs_images_dir){
print(dir)
for(file in list.files(dir)) {
image <- check_ants(file.path(dir, file))
n <- length(which(image == 0))
sum <- sum(image)
print(paste(file, ":", n, sum))
}
print("")
}
for(dir in fs_images_dir){
print(dir)
for(file in list.files(dir)) {
image <- check_ants(file.path(dir, file))
n <- length(which(image == 0))
sum <- sum(image)
print(paste(file, ":", n, sum))
}
print("")
}
check_ants(settings$mask_path)
alff
idemo
basil
check_ants(settings$mask_path) -> mask
sum(mask)
sum(which(mask == 0))
?antsGetDirection
createAntsrTransform(matrix = as.matrix(c(-1, 0, 0, 0, 1, 0, 0, 0, 1), nrow = 3), offset = c(0, 1, 0))
createAntsrTransform(matrix = (-1, 0, 0, 0, 1, 0, 0, 0, 1), offset = c(0, 1, 0))
createAntsrTransform(matrix = c(-1, 0, 0, 0, 1, 0, 0, 0, 1), offset = c(0, 1, 0))
createAntsrTransform(matrix = as.matrix(c(-1, 0, 0, 0, 1, 0, 0, 0, 1), nrow = 3), offset = c(0, 1, 0))
as.matrix(c(-1, 0, 0, 0, 1, 0, 0, 0, 1), nrow = 3)
as.matrix(c(-1, 0, 0, 0, 1, 0, 0, 0, 1), nrows = 3)
?as.matrix
createAntsrTransform(matrix = diag(c(-1, 1, 1)), offset = c(0, 1, 0))
createAntsrTransform(matrix = diag(c(-1, 1, 1)), offset = c(0, 1, 0)) -> transform
basil
alff
test <- antsApplyTransform(alff, basil, transform)
test <- antsApplyTransforms(alff, basil, transform)
test <- antsApplyTransforms(fixed = alff, moving = basil, transformList = list(transform))
test <- antsApplyTransforms(fixed = alff, moving = basil, transformList = transform)
transform
test <- applyAntsrTransform(transform = transform, data = basil, reference = alff)
test
alff
basil
antsImageWrite(test, "~/Documents/IMCo_analyses/input/basil_fixed.nii.gz")
identical(as.array(test), as.array(basil))
createAntsrTransform(matrix = diag(c(-1, 1, 1)), offset = c(0, 0, 0)) -> transform
test <- applyAntsrTransform(transform = transform, data = basil, reference = alff)
identical(as.array(test), as.array(basil))
sum((test - basil)^2)
sum((as.array(test) - as.array(basil))^2)
createAntsrTransform(matrix = diag(c(1, 1, 1)), offset = c(0, 0, 0)) -> transform
test <- applyAntsrTransform(transform = transform, data = basil, reference = alff)
createAntsrTransform(matrix = diag(c(1, 1, 1)), offset = c(0, 1, 0)) -> transform
test <- applyAntsrTransform(transform = transform, data = basil, reference = alff)
test
alff
basil <- check_ants(input_filepaths$modality_2[1])
basil
transform <- createAntsrTransform(matrix = diag(c(1, 1, 1)), offset = c(0, 1, 0))
test <- applyAntsrTransform(transform = transform, data = basil, reference = alff)
test
transform2 <- createAntsrTransform(matrix = diag(c(1,1,1)), offset = c(0, 1, 0))
transform2 <- createAntsrTransform(matrix = diag(c(1,1,1)), offset = c(0, 0, 0))
test2 <- applyAntsrTransform(transform = transform2, data = basil, reference = alff)
test2
identical(as.array(test2), as.array(test))
identical(as.array(test2), as.array(basil))
applyAntsrTransform()
?applyAntsrTransform
transform2 <- createAntsrTransform()
test3 <- applyAntsrTransform(transform = transform2, data = basil, reference = alff)
identical(as.array(test2), as.array(test3))
test3 * mask
basil * mask
l
library(here)
