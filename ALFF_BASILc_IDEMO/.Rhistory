library(here)
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
library(freesurfer)
#TOCHANGE
idemo_qa <- read_csv(here("input/csvs/idemodata/n1601_idemo_FinalQA_092817.csv"))
idemo <- read_csv(here("input/csvs/idemodata/n1601_idemoBehavior_20151130.csv"))
idemo_health <- read_csv(here("input/csvs/idemodata/n1601_health_20170421.csv"))
pnc_demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv"))
basil_subj <- read_table(here("input/csvs/demographics/basil_subj.txt"), col_names = FALSE)
idemo_qa <- idemo_qa %>% filter(idemoExcludeVoxelwise == 0)
idemo <- idemo %>% filter(idemoBehHappyCorrectCount >= 8)
idemo_health <- idemo_health %>% filter(ltnExcludev2 == 0)
pnc_demographics <- pnc_demographics %>% rename(scanid = "id")
basil_subj <- basil_subj %>% separate(X1, c("scanid", "settings", "file_root"), sep = "_")
common_pts <- Reduce(intersect, list(idemo_qa$scanid, idemo$scanid, idemo_health$scanid, pnc_demographics$scanid, basil_subj$scanid)) %>%
as.data.frame() %>%
rename(subj_num = ".")
input_filepaths <- common_pts %>%
mutate(modality_1 = paste0(subj_num, "_alffStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/alff", .),
modality_2 = paste0(subj_num, "_basil.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/cbf-basil", .),
modality_3 = paste0(subj_num, "_sigchange_cope1_TaskStd.nii.gz") %>% file.path("~/Documents/IMCo_analyses/input/niftis/idemo", .))
input_filepaths$subj_num <- as.numeric(input_filepaths$subj_num)
write_csv(input_filepaths, here("input/csvs/input_filepaths.csv"))
rm(pnc_demographics, common_pts, idemo, idemo_health, basil_subj)
#TOCHANGE
idemo_qa <- idemo_qa %>% rename(subj_num = scanid)
demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv")) %>%
rename(subj_num = id)
demographics <- right_join(demographics, input_filepaths,
by = "subj_num") %>%
left_join(idemo_qa, by = "subj_num") %>% mutate(across(contains("Exclude"), as.factor),
sex = case_when(
sex == 1 ~ "Male",
sex == 2 ~ "Female",
T ~ NA_character_),
race2 = case_when(
race2 == 1 ~ "White",
race2 == 2 ~ "Black",
race2 == 3 ~ "Other",
T ~ NA_character_),
across(c(sex, race, race2, ethnicity, handednessv2), as.factor))
predictors <- demographics %>%
select(sex, ageAtScan1, race2, pcaslRelMeanRMSMotion, restRelMeanRMSMotion, idemoRelMeanRMSMotion)
write_csv(predictors, file.path(here("input/csvs/predictors.csv")))
rm(demographics, idemo_qa)
#TOCHANGE
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
nifti_dir <- "~/Documents/IMCo_analyses/input/niftis"
batch_script_dir <- here("R/batch_scripts")
input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv")
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
predictors_path <- file.path(input_dir, "csvs/predictors.csv")
settings_path <- file.path(input_dir, "csvs/settings.RData")
modalities <- c("alff", "cbf-basil", "idemo") #TOCHANGE
fwhm <- 2
prop_miss <- 0.9
settings <- list(output_dir = output_dir,
input_dir = input_dir,
nifti_dir = nifti_dir,
batch_script_dir = batch_script_dir,
input_filepaths_path = input_filepaths_path,
mask_path = mask_path,
predictors_path = predictors_path,
settings_path = settings_path,
modalities = modalities,
fwhm = fwhm,
prop_miss = prop_miss)
save(settings, file = file.path(settings$input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, nifti_dir, batch_script_dir, input_filepaths_path, mask_path, predictors_path, settings_path, modalities, fwhm, prop_miss)
#TOCHANGE
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
nifti_dir <- "~/Documents/IMCo_analyses/input/niftis"
batch_script_dir <- here("R/batch_scripts")
input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv")
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
predictors_path <- file.path(input_dir, "csvs/predictors.csv")
settings_path <- file.path(input_dir, "csvs/settings.RData")
modalities <- c("alff", "cbf-basil", "idemo") #TOCHANGE
fwhm <- 2 #TOCHANGE
prop_miss <- 0.9
settings <- list(output_dir = output_dir,
input_dir = input_dir,
nifti_dir = nifti_dir,
batch_script_dir = batch_script_dir,
input_filepaths_path = input_filepaths_path,
mask_path = mask_path,
predictors_path = predictors_path,
settings_path = settings_path,
modalities = modalities,
fwhm = fwhm,
prop_miss = prop_miss)
save(settings, file = file.path(settings$input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, nifti_dir, batch_script_dir, input_filepaths_path, mask_path, predictors_path, settings_path, modalities, fwhm, prop_miss)
load(here("input/csvs/settings.RData"))
input_filepaths <- read_csv(settings$input_filepaths_path)
predictors <- read_csv(settings$predictors_path)
bash_file <- rep(0, nrow(input_filepaths))
for(i in 1:nrow(input_filepaths)) {
line <- input_filepaths[i, ]
out_name <- line[1]
subject_files <- paste(line[1, 2], line[1, 3], line[1, 4], sep = ",") #TOCHANGE
bsub_args <- paste("bsub",
"-q taki_normal",
paste("-J", shQuote("intermodal_coupling")),
paste("-R", shQuote("rusage[mem=4000]")),
"-M 10000",
paste("-o", file.path(settings$output_dir, "stdout/intermodal_coupling.txt")))
Rscript_args <- paste("Rscript", file.path(settings$batch_script_dir, "01_perform_imco.R"),
subject_files,
settings$mask_path,
settings$output_dir,
out_name,
settings$fwhm,
settings$prop_miss)
bash_file[i] <- paste(bsub_args, Rscript_args)
}
write_lines(bash_file, file.path(settings$batch_script_dir, "01_commands.sh"))
#TORUNOTHER here("R/batch_scripts/01_commands.sh") on login node
#TOCOPY
#Make sure to move 01_perform_imco.R into new directory
rm(bash_file, i, line, out_name, subject_files, bsub_args, Rscript_args)
