predictors = predictors,
cores = 16)
analyze_coupled_images(coupled_dir = file.path(settings$output_dir, "niftis/coupled/unscaled_wcor"),
mask = settings$mask_path,
predictors = predictors,
cores = 16)
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
if (any(grepl("gm-mask|cbf|alff", file_name))) {
mask_indices <- which(as.array(gm_mask) > 0)
} else {
mask_indices <- which(as.array(mask) > 0)
}
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
if (add_gm_mask == TRUE) {
out_dir <- paste0(out_dir, "_gm")
unadjusted <- unadjusted * gm_mask
bonferroni <- bonferroni * gm_mask
fdr_image_0.05 <- fdr_image_0.05 * gm_mask
}
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
print(file_name)
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
name(settings)
names(settings)
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
batch_script_dir <- here("R/batch_scripts")
fwhm <- 3
propMiss <- 0.9
settings <- list(input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv"),
output_dir = output_dir,
input_dir = input_dir,
batch_script_dir = batch_script_dir,
mask_path = mask_path,
fwhm = fwhm,
propMiss = propMiss)
input_filepaths <- read_csv(file.path(input_dir, "csvs/input_filepaths.csv"))
save(settings, file = file.path(input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, mask_path, batch_script_dir, fwhm, propMiss)
names(settings)
settings$output_dir
pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
pval_name_list[[1]]
pval_name_list %>% length
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
if (any(grepl("gm-mask|cbf|alff", file_name))) {
mask_indices <- which(as.array(gm_mask) > 0)
} else {
mask_indices <- which(as.array(mask) > 0)
}
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
if (add_gm_mask == TRUE) {
out_dir <- paste0(out_dir, "_gm")
unadjusted <- unadjusted * gm_mask
bonferroni <- bonferroni * gm_mask
fdr_image_0.05 <- fdr_image_0.05 * gm_mask
}
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
print(file_name)
return(NULL)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
check_ants(settings$mask_path) %>% sum()
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
print(pval_numeric_clean %>% length())
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
return(file_name)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
return(file_name)
}
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
library(tidyverse)
library(ANTsRCore)
library(extrantsr)
library(IMCo)
library(parallel)
library(here)
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
batch_script_dir <- here("R/batch_scripts")
fwhm <- 3
propMiss <- 0.9
settings <- list(input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv"),
output_dir = output_dir,
input_dir = input_dir,
batch_script_dir = batch_script_dir,
mask_path = mask_path,
fwhm = fwhm,
propMiss = propMiss)
input_filepaths <- read_csv(file.path(input_dir, "csvs/input_filepaths.csv"))
save(settings, file = file.path(input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, mask_path, batch_script_dir, fwhm, propMiss)
demographics <- read_csv(here("input/csvs/demographics/binded_demographics.csv")) %>%
rename(subj_num = id)
demographics <- right_join(demographics, input_filepaths,
by = "subj_num") %>%
mutate(across(contains("Exclude"), as.factor),
sex = case_when(
sex == 1 ~ "Male",
sex == 2 ~ "Female",
T ~ NA_character_),
race2 = case_when(
race2 == 1 ~ "White",
race2 == 2 ~ "Black",
race2 == 3 ~ "Other",
T ~ NA_character_),
across(c(sex, race, race2, ethnicity, handednessv2), as.factor))
predictors <- demographics %>%
select(sex, ageAtScan1, race2, pcaslRelMeanRMSMotion, restRelMeanRMSMotion)
rm(demographics)
get_file_names <- function(pval_directory) {
pval_names <- file.path(pval_directory) %>%
list.files()
c(pval_names) %>% sub(".nii.gz", "", .)
}
load_pval_images <- function(pval_directory) {
pval_files <- file.path(pval_directory) %>% list.files(full.names = TRUE)
check_ants(pval_files)
}
get_metadata <- function(pval_names, pval_directory) {
pval_files <- file.path(pval_directory) %>% list.files(full.names = TRUE)
metadata_df <- pval_names %>%
str_split("_") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
rownames(metadata_df) <- 1:nrow(metadata_df)
colnames(metadata_df) <- c("scaling", "matrix_type", "coefficient", "mc_correction")
metadata_df <- metadata_df %>% mutate(file_paths = pval_files)
metadata_df
}
get_descriptive_stats <- function(pval_image, gm_mask) {
total_voxels <- sum(gm_mask)
prop_sig <- sum(pval_image) / total_voxels
data.frame(prop_sig)
}
process_pval_images <- function(pval_directory, gm_mask, image_format = c("ants", "nifti")) {
gm_mask <- check_ants(gm_mask)
pval_images <- load_pval_images(pval_directory)
pval_names <- get_file_names(pval_directory)
pval_metadata <- get_metadata(pval_names, pval_directory)
pval_metadata_list <- split(pval_metadata, seq(nrow(pval_metadata)))
descriptive_stats <- lapply(pval_images,
get_descriptive_stats,
gm_mask)
descriptive_stats_df <- descriptive_stats %>%
unlist() %>%
as.matrix(byrow = T, ncol = ncol(pval_metadata)) %>%
as.data.frame()
names(descriptive_stats_df) <- c("prop_sig")
rownames(descriptive_stats_df) <- 1:nrow(pval_metadata)
pval_info <- cbind(pval_metadata, descriptive_stats_df)
if (image_format == "nifti") {
pval_images <- lapply(pval_images, ants2oro)
}
list(pval_info, pval_images)
}
view_itksnap <- function(pval_info,
pval_mask_filter = "brain",
directory_filter = NULL,
segmentation = NULL,
scaling_filter = NULL,
fwhm_filter = NULL,
coefficient_filter = NULL,
mc_correction_filter = NULL,
pca_mask_filter = NULL,
show_image = TRUE) {
if (class(segmentation) == "antsImage") {
segmentation <- ants2oro(segmentation)
}
tmp <- pval_info
if (!is.null(directory_filter)) {
tmp <- tmp %>% filter(directory == directory_filter)
}
if (!is.null(pval_mask_filter)) {
tmp <- tmp %>% filter(pval_mask == pval_mask_filter)
}
if (!is.null(scaling_filter)) {
tmp <- tmp %>% filter(scaling == scaling_filter)
}
if (!is.null(fwhm_filter)) {
tmp <- tmp %>% filter(fwhm == fwhm_filter)
}
if (!is.null(coefficient_filter)) {
tmp <- tmp %>% filter(coefficient == coefficient_filter)
}
if (!is.null(mc_correction_filter)) {
tmp <- tmp %>% filter(mc_correction == mc_correction_filter)
}
if (!is.null(pca_mask_filter)) {
tmp <- tmp %>% filter(pca_mask == pca_mask_filter)
}
print(tmp$prop_sig)
print(tmp$file_path)
file_paths <- tmp$file_paths
if (show_image) {
if (length(file_paths) == 2) {
itksnap(file_paths[1], overlay = file_paths[2], segmentation, verbose = F)
} else {
for (i in 1:length(file_paths)) {
itksnap(file_paths[i], segmentation = segmentation, verbose = F)
}
}
}
return(NULL)
}
pval_dir <- file.path(settings$output_dir, "niftis/pvals")
pval_image_stats <- process_pval_images(file.path(pval_dir, "adjusted"), settings$mask_path, image_format = "nifti")
pval_stats_df <- pval_image_stats[[1]]
view_itksnap(pval_stats_df,
pval_mask_filter = NULL,
directory_filter = "adjusted_gm",
segmentation = gm_mask,
scaling_filter = "unscaled",
fwhm_filter = "fwhm3",
coefficient_filter = NULL,
mc_correction_filter = "fdr05",
pca_mask_filter = "gm-mask",
show_image = TRUE)
write_csv(pval_stats_df, file.path(settings$output_dir, "csvs/pval_descriptive_stats.csv"))
write_csv(pval_stats_df, file.path(settings$output_dir, "csvs/pval_descriptive_stats.csv"))
