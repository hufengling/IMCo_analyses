int_pvals <- interaction_regression$coefficients[8, 4]
pvals <- c(reg_pvals, int_pvals)
return(pvals)
}
write_pvals <- function(image_list, mask, dir, is_descriptive = FALSE) {
mask_indices <- which(as.array(mask) > 0)
reference <- extrantsr::check_ants(file.path(dir, list.files(dir)[[1]]))
file_name <- (dir %>% str_split("/"))[[1]]
file_name <- file_name[length(file_name)]
if (is_descriptive) {
descriptive_dir <- file.path(settings$output_dir, "niftis/descriptive")
dir.create(descriptive_dir, showWarnings = FALSE)
names <- c("_mean", "_variance")
for (i in 1:length(image_list)) {
descriptive_image <- make_ants_image(image_list[[i]], mask_indices, reference)
ANTsRCore::antsImageWrite(
descriptive_image,
file.path(
descriptive_dir,
paste0(file_name, names[i], ".nii.gz")))
}
return(NULL)
}
for (i in 1:length(image_list)) {
pval_image <- make_ants_image(image_list[[i]], mask_indices, reference)
ANTsRCore::antsImageWrite(
pval_image,
file.path(
output_dir, "niftis/pvals",
paste0(file_name, "_pval_", i, ".nii.gz")
)
)
}
return(NULL)
}
analyze_coupled_images <- function(coupled_dir, mask, predictors, cores = 2) {
mask <- extrantsr::check_ants(mask)
image_vector_list <- load_images(coupled_dir, mask)
voxel_vector_list <- transpose_list(image_vector_list)
descriptive_list <- make_descriptive_images(voxel_vector_list)
pvalbyvoxel_list <- parallel::mclapply(voxel_vector_list,
get_pvals_by_voxel,
predictors = predictors,
mc.cores = cores)
pvalbycoef_list <- transpose_list(pvalbyvoxel_list)
write_pvals(descriptive_list, mask, coupled_dir, is_descriptive = TRUE)
write_pvals(pvalbycoef_list, mask, coupled_dir)
return(NULL)
}
analyze_coupled_images(coupled_dir = file.path(settings$output_dir, "niftis/coupled/global_wcov"),
mask = settings$mask_path,
predictors = predictors,
cores = 16)
load_images <- function(dir, mask) {
files <- list.files(dir)
file_paths <- file.path(dir, files)
image_vector_list <- lapply(file_paths,
function(x, mask) {
image <- extrantsr::check_ants(x)
image[mask == 0] <- NA
image_vector <- image %>% as.numeric()
image_vector_no_NAs <- image_vector[!is.na(image_vector)]
return(image_vector_no_NAs)
},
mask = mask
)
return(image_vector_list)
}
transpose_list <- function(list) {
matrix <- list %>%
unlist() %>%
matrix(byrow = TRUE, nrow = length(list))
transposed_list <- lapply(seq_len(ncol(matrix)), function(i) matrix[, i])
return(transposed_list)
}
make_descriptive_images <- function(voxel_vector_list) {
descriptive_vector <- lapply(voxel_vector_list, function(voxel_vector) {
voxel_mean <- sum(voxel_vector)/length(voxel_vector)
voxel_variance <- var(voxel_vector)
return(c(voxel_mean, voxel_variance))
}) %>% unlist()
voxel_mean_vector <- descriptive_vector[c(T, F)]
voxel_variance_vector <- descriptive_vector[c(F, T)]
return(list(voxel_mean_vector, voxel_variance_vector))
}
get_pvals_by_voxel <- function(voxel_vector, predictors) {
if (length(voxel_vector) != nrow(predictors)) {
stop("n doesn't match")
}
regression <- lm(voxel_vector ~
sex + ageAtScan1 +
race2 + pcaslRelMeanRMSMotion + restRelMeanRMSMotion,
data = predictors) %>%
summary()
reg_pvals <- regression$coefficients[c(2, 3), 4]
interaction_regression <- lm(voxel_vector ~
sex * ageAtScan1 +
race2 + pcaslRelMeanRMSMotion + restRelMeanRMSMotion,
data = predictors) %>%
summary()
int_pvals <- interaction_regression$coefficients[8, 4]
pvals <- c(reg_pvals, int_pvals)
return(pvals)
}
write_pvals <- function(image_list, mask, dir, is_descriptive = FALSE) {
mask_indices <- which(as.array(mask) > 0)
reference <- extrantsr::check_ants(file.path(dir, list.files(dir)[[1]]))
file_name <- (dir %>% str_split("/"))[[1]]
file_name <- file_name[length(file_name)]
if (is_descriptive) {
descriptive_dir <- file.path(settings$output_dir, "niftis/descriptive")
dir.create(descriptive_dir, showWarnings = FALSE)
names <- c("_mean", "_variance")
for (i in 1:length(image_list)) {
descriptive_image <- make_ants_image(image_list[[i]], mask_indices, reference)
ANTsRCore::antsImageWrite(
descriptive_image,
file.path(
descriptive_dir,
paste0(file_name, names[i], ".nii.gz")))
}
return(NULL)
}
for (i in 1:length(image_list)) {
pval_image <- make_ants_image(image_list[[i]], mask_indices, reference)
ANTsRCore::antsImageWrite(
pval_image,
file.path(
settings$output_dir, "niftis/pvals",
paste0(file_name, "_pval_", i, ".nii.gz")
)
)
}
return(NULL)
}
analyze_coupled_images <- function(coupled_dir, mask, predictors, cores = 2) {
mask <- extrantsr::check_ants(mask)
image_vector_list <- load_images(coupled_dir, mask)
voxel_vector_list <- transpose_list(image_vector_list)
descriptive_list <- make_descriptive_images(voxel_vector_list)
pvalbyvoxel_list <- parallel::mclapply(voxel_vector_list,
get_pvals_by_voxel,
predictors = predictors,
mc.cores = cores)
pvalbycoef_list <- transpose_list(pvalbyvoxel_list)
write_pvals(descriptive_list, mask, coupled_dir, is_descriptive = TRUE)
write_pvals(pvalbycoef_list, mask, coupled_dir)
return(NULL)
}
analyze_coupled_images(coupled_dir = file.path(settings$output_dir, "niftis/coupled/global_wcov"),
mask = settings$mask_path,
predictors = predictors,
cores = 16)
analyze_coupled_images(coupled_dir = file.path(settings$output_dir, "niftis/coupled/unscaled_wcor"),
mask = settings$mask_path,
predictors = predictors,
cores = 16)
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
if (any(grepl("gm-mask|cbf|alff", file_name))) {
mask_indices <- which(as.array(gm_mask) > 0)
} else {
mask_indices <- which(as.array(mask) > 0)
}
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
if (add_gm_mask == TRUE) {
out_dir <- paste0(out_dir, "_gm")
unadjusted <- unadjusted * gm_mask
bonferroni <- bonferroni * gm_mask
fdr_image_0.05 <- fdr_image_0.05 * gm_mask
}
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
print(file_name)
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
name(settings)
names(settings)
output_dir <- here("output") #base directory for all outputs
input_dir <- here("input") #base directory for all inputs
mask_path <- file.path(input_dir, "references/masks/gm10_pcals_rest.nii.gz")
batch_script_dir <- here("R/batch_scripts")
fwhm <- 3
propMiss <- 0.9
settings <- list(input_filepaths_path = file.path(input_dir, "csvs/input_filepaths.csv"),
output_dir = output_dir,
input_dir = input_dir,
batch_script_dir = batch_script_dir,
mask_path = mask_path,
fwhm = fwhm,
propMiss = propMiss)
input_filepaths <- read_csv(file.path(input_dir, "csvs/input_filepaths.csv"))
save(settings, file = file.path(input_dir, "csvs/settings.RData"))
rm(output_dir, input_dir, mask_path, batch_script_dir, fwhm, propMiss)
names(settings)
settings$output_dir
pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
pval_name_list[[1]]
pval_name_list %>% length
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
if (any(grepl("gm-mask|cbf|alff", file_name))) {
mask_indices <- which(as.array(gm_mask) > 0)
} else {
mask_indices <- which(as.array(mask) > 0)
}
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
if (add_gm_mask == TRUE) {
out_dir <- paste0(out_dir, "_gm")
unadjusted <- unadjusted * gm_mask
bonferroni <- bonferroni * gm_mask
fdr_image_0.05 <- fdr_image_0.05 * gm_mask
}
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
print(file_name)
return(NULL)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL, add_gm_mask = F, gm_mask = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
process_pval_image <- function(file_path, mask, out_dir, pval_name = NULL) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
file_name
}
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
check_ants(settings$mask_path) %>% sum()
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
print(pval_numeric_clean %>% length())
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
return(file_name)
}
get_file_name <- function(file_path, pval_name) {
split_path <- file_path %>% str_split("/")
full_name <- split_path[[1]][length(split_path[[1]])]
file_name <- full_name %>% str_remove(".nii.gz")
if (!is.null(pval_name)) {
file_name <- file_name %>% sub("pval.*", pval_name, .)
}
return(file_name)
}
process_pval_image <- function(file_path, mask, out_dir, pval_name) {
mask <- extrantsr::check_ants(mask)
file_name <- get_file_name(file_path, pval_name)
pval_image <- check_ants(file_path)
pval_numeric <- pval_image %>% as.numeric()
pval_numeric_clean <- pval_numeric[pval_numeric != 0]
bonferroni_adjusted <- p.adjust(pval_numeric_clean, method = "bonferroni")
fdr_adjusted <- p.adjust(pval_numeric_clean, method = "fdr")
mask_indices <- which(as.array(mask) > 0)
unadjusted <- convert_to_ants(pval_numeric_clean, 0.05, mask_indices, pval_image)
bonferroni <- convert_to_ants(bonferroni_adjusted, 0.05, mask_indices, pval_image)
fdr_image_0.05 <- convert_to_ants(fdr_adjusted, 0.05, mask_indices, pval_image)
dir.create(out_dir, showWarnings = FALSE)
antsImageWrite(unadjusted, file.path(out_dir, paste0(file_name, "_unadjusted.nii.gz")))
antsImageWrite(bonferroni, file.path(out_dir, paste0(file_name, "_bonferroni.nii.gz")))
antsImageWrite(fdr_image_0.05, file.path(out_dir, paste0(file_name, "_fdr05.nii.gz")))
return(NULL)
}
convert_to_ants <- function(adjusted_pvals, threshold, mask_indices, reference) {
adjusted_pvals[adjusted_pvals > threshold] <- 0
adjusted_pvals[adjusted_pvals != 0] <- 1
adjusted_image <- make_ants_image(adjusted_pvals, mask_indices, reference)
return(adjusted_image)
}
name_pvals <- function(pval_files, pval_names) {
lapply(pval_files,
function(pval_file, pval_names) {
pval_num <- str_extract(pval_file, ".\\.nii\\.gz") %>%
str_remove("\\.nii\\.gz") %>%
as.numeric()
pval_names[pval_num]
},
pval_names = pval_names)
}
raw_pvals_dir <- file.path(settings$output_dir, "niftis/pvals/raw")
raw_pval_files <- file.path(raw_pvals_dir, list.files(raw_pvals_dir, ".nii.gz"))
pval_names <- c("sex", "age", "sex-age")
pval_name_list <- name_pvals(raw_pval_files, pval_names)
mapply(process_pval_image,
file_path = raw_pval_files,
pval_name = pval_name_list,
MoreArgs = list(
mask = settings$mask_path,
out_dir = file.path(settings$output_dir, "niftis/pvals/adjusted")))
